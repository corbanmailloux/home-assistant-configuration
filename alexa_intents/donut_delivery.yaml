SendDonut:
  action:
    - service: input_select.select_option
      entity_id: input_select.donut_selector
      data_template:
        option: >
          {%- if Donut is not defined or Donut.lower() == "Random".lower() -%}
            {{ states.input_select.donut_selector.attributes.options | random }}
          {%- elif Donut.lower() in states.input_select.donut_selector.attributes.options|map('lower') -%}
            {%- for option in states.input_select.donut_selector.attributes.options -%}
              {%- if option.lower() == Donut.lower() -%}
                {{ option }}
              {%- endif -%}
            {%- endfor -%}
          {%- else -%}
            {{ states.input_select.donut_selector.attributes.options | random }}
          {%- endif -%}
    - service: input_select.select_option
      entity_id: input_select.donut_destination
      data_template:
        option: >
          {%- if User is not defined -%}
            {{ states.input_select.donut_destination.attributes.options | random }}
          {%- elif User.lower() == "Maggie".lower() -%}
            Maggie
          {%- elif User.lower() == "Corban".lower() -%}
            Corban
          {%- else -%}
            {{ states.input_select.donut_destination }}
          {%- endif -%}
    - service: script.turn_on
      entity_id: script.send_donut
  speech:
    type: plaintext
    text: >
      {%- if User is not defined or User.lower() == "maggie" or User.lower() == "corban" -%}
        {%- if Donut is not defined or Donut.lower() == "random" or Donut.lower() in states.input_select.donut_selector.attributes.options|map('lower') -%}
          "Your donut has been delivered."
        {%- else -%}
          "I didn't understand the donut type, so I sent a random type. See Home Assistant for the types, or try random."
        {%- endif -%}
      {%- else -%}
        I didn't recognize the user, so I picked one. Please use Maggie or Corban.
      {%- endif -%}
