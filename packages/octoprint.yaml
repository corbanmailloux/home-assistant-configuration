sensor:
  - platform: template
    sensors:
      octoprint_time_elapsed:
        friendly_name: OctoPrint Time Elapsed
        unit_of_measurement: "s"
        availability_template: >
          {{ not is_state('sensor.octoprint_start_time', 'unavailable') }}
        value_template: >
          {% set start = as_timestamp(states('sensor.octoprint_start_time'), None) %}
          {% if is_number(start) %}
            {{ (as_timestamp(now()) - start) | int }}
          {% else %}
            unknown
          {% endif %}
        attribute_templates:
          start_time: "states('sensor.octoprint_start_time')"

      octoprint_time_remaining:
        friendly_name: OctoPrint Time Remaining
        unit_of_measurement: "s"
        availability_template: >
          {{ not is_state('sensor.octoprint_estimated_finish_time', 'unavailable') }}
        value_template: >
          {% set finish = as_timestamp(states('sensor.octoprint_estimated_finish_time'), None) %}
          {% if is_number(finish) %}
            {{ (finish - as_timestamp(now())) | int }}
          {% else %}
            unknown
          {% endif %}
        attribute_templates:
          start_time: "states('sensor.octoprint_estimated_finish_time')"

binary_sensor:
  - platform: template
    sensors:
      display_printer_card:
        friendly_name: "Display 3D Printer Card"
        value_template: >-
          {# Print is running. #}
          {% set printing = is_state('binary_sensor.octoprint_printing', 'on') %}

          {# Explicit states, including idle (operational) #}
          {% set in_good_state =
            is_state('sensor.octoprint_current_state', 'Printing')
            or
            is_state('sensor.octoprint_current_state', 'Printing from SD')
            or
            is_state('sensor.octoprint_current_state', 'Operational') %}

          {{ printing or in_good_state }}

rest_command:
  shutdown_octoprint:
    url: http://octopi.local/api/system/commands/core/shutdown
    method: POST
    headers:
      X-Api-Key: !secret octoprint_api_key

# script:
#   shutdown_octopi:
#     alias: "Shutdown OctoPi and Power Off"
#     sequence:
#       - service: rest_command.shutdown_octoprint
#       - delay:
#           seconds: 45 # Give some time for shutdown
#       - service: switch.turn_off
#         target:
#           entity_id: switch.3d_printer_main_power

automation:
  - id: d98aa18a-de19-4d79-8fd0-91bf965b7080
    alias: Notify Corban when 3D print stops
    trigger:
      - platform: state
        entity_id: binary_sensor.octoprint_printing
        from: "on"
        # to: "off" # Including unavailable for now
    action:
      - alias: "Notify Corban"
        service: notify.corban
        data:
          title: "3D Print Stopped"
          message: "Hopefully it's completed successfully, but..."
