# So this one's a bit crazy...
# My lock is currently connected directly into HomeKit through an Apple HomePod.
# I could use a Bluetooth Proxy and connect directly, but that was unreliable and required extracting keys.
# Instead, this system presents two fake entities to HomeKit: A switch for status, and a temperature sensor for control.
#
# In HomeKit, there are a few automations:
# 1. When the door is locked, turn off the fake switch.
# 2. When the door is unlocked, turn on the fake switch.
# 3. When the "temperature" of the fake sensor goes above 5, lock the door.
# 4. When the "temperature" of the fake sensor goes below -5, unlock the door.
#
# This gives a bidirectional method of setting and checking the status of the lock, allowing easier automations.
# These are then wrapped in a template lock, allowing standard UI and controls.

input_boolean:
  fake_side_door_lock_status:
    name: FAKE - Side Door Lock Status

input_number:
  fake_side_door_lock_input:
    name: FAKE - Side Door Lock Input Number
    max: 10
    min: -10
    step: 1
    initial: 0

lock:
  - platform: template
    name: Side Door
    unique_id: 931b3f7c-3fae-4bf2-aebd-1aed2fb57da6
    value_template: >
      {{ is_state('input_boolean.fake_side_door_lock_status', 'off') }}
    lock:
      - action: input_number.set_value
        data:
          value: 10
        target:
          entity_id: input_number.fake_side_door_lock_input
      - delay:
          seconds: 10
      - action: input_number.set_value
        data:
          value: 0
        target:
          entity_id: input_number.fake_side_door_lock_input
    unlock:
      - action: input_number.set_value
        data:
          value: -10
        target:
          entity_id: input_number.fake_side_door_lock_input
      - delay:
          seconds: 10
      - action: input_number.set_value
        data:
          value: 0
        target:
          entity_id: input_number.fake_side_door_lock_input

template:
  - sensor:
      - name: "FAKE - Side Door Lock Input Temperature"
        unit_of_measurement: "Â°F"
        device_class: temperature
        state: >-
          {{ states("input_number.fake_side_door_lock_input") }}
