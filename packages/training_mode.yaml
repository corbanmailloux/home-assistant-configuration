script:
  training_mode_start:
    alias: "Training Mode - Start"
    icon: mdi:trophy-outline
    sequence:
      - alias: "Disable adaptive lighting temporarily"
        service: switch.turn_off
        target:
          entity_id:
            - switch.adaptive_lighting_adapt_brightness_main_adaptive_lighting
            - switch.adaptive_lighting_adapt_brightness_office
      - alias: "Set initial value"
        variables:
          training_entity_ids: >
            {{ [] }}

      # For each room, check if that room is marked as excluded and update the entity ID list.

      # - alias: "Master Bedroom"
      #   variables:
      #     training_entity_ids: >
      #       {% if is_state("input_boolean.room_exclude_master_bedroom", "off") -%}
      #       {{ training_entity_ids + ["light.master_bedroom_ceiling_fan_light"] }}
      #       {%- else -%}
      #       {{ training_entity_ids }}
      #       {% endif %}

      - alias: "Guest Bedroom"
        variables:
          training_entity_ids: >
            {% if is_state("input_boolean.room_exclude_guest_bedroom", "off") -%}
            {{ training_entity_ids + ["light.fairy_lights"] }}
            {%- else -%}
            {{ training_entity_ids }}
            {% endif %}

      # - alias: "Craft Room"
      #   variables:
      #     training_entity_ids: >
      #       {% if is_state("input_boolean.room_exclude_craft_room", "off") -%}
      #       {{ training_entity_ids + ["light.WHATEVER"] }}
      #       {%- else -%}
      #       {{ training_entity_ids }}
      #       {% endif %}

      - alias: "Office"
        variables:
          training_entity_ids: >
            {% if is_state("input_boolean.room_exclude_office", "off") -%}
            {{ training_entity_ids + ["light.office_ceiling", "light.corban_s_office_lamp"] }}
            {%- else -%}
            {{ training_entity_ids }}
            {% endif %}

      - alias: "Living Room"
        variables:
          training_entity_ids: >
            {% if is_state("input_boolean.room_exclude_livingroom", "off") -%}
            {{ training_entity_ids + ["light.corner_lamp"] }}
            {%- else -%}
            {{ training_entity_ids }}
            {% endif %}

      - alias: "Kitchen"
        variables:
          training_entity_ids: >
            {% if is_state("input_boolean.room_exclude_kitchen", "off") -%}
            {{ training_entity_ids + ["light.kitchen_main_lights", "light.kitchen_bar_light", "light.mudroom_lamp"] }}
            {%- else -%}
            {{ training_entity_ids }}
            {% endif %}

      - alias: "Dining Room"
        variables:
          training_entity_ids: >
            {% if is_state("input_boolean.room_exclude_dining_room", "off") -%}
            {{ training_entity_ids + ["light.dining_room_light"] }}
            {%- else -%}
            {{ training_entity_ids }}
            {% endif %}

      - alias: "Sunporch"
        variables:
          training_entity_ids: >
            {% if is_state("input_boolean.room_exclude_sunporch", "off") -%}
            {{ training_entity_ids + ["light.sunporch_sconces", "light.sunporch_string_lights"] }}
            {%- else -%}
            {{ training_entity_ids }}
            {% endif %}

      - alias: "Hallways"
        variables:
          training_entity_ids: >
            {% if is_state("input_boolean.room_exclude_hallways", "off") -%}
            {{ training_entity_ids + ["light.front_entry_lights", "light.first_floor_hall_light"] }}
            {%- else -%}
            {{ training_entity_ids }}
            {% endif %}

      # Now that we have all of the impacted lights in a variable, make a scene.
      - alias: "Create scene with all impacted lights"
        service: scene.create
        data:
          scene_id: state_before_training
          snapshot_entities: >
            {{ training_entity_ids }}

      - alias: "Turn on the lights"
        service: light.turn_on
        data:
          brightness_pct: 100
        target:
          entity_id: >
            {{ training_entity_ids }}

      # To have some lights not default to 100%, use a filter like this:
      # {{
      #   training_entity_ids
      #   | reject('equalto', "light.guest_bedroom_ceiling_fan_light")
      #   | list
      # }}

input_boolean:
  training_mode:
    name: Training
    icon: mdi:trophy-outline

automation:
  - alias: Training Mode Start
    id: 0306466a-8dab-4d80-b814-d0b5a7d97f31
    trigger:
      - platform: state
        entity_id: input_boolean.training_mode
        to: "on"
    action:
      - service: script.training_mode_start

  - alias: Training Mode Stop
    id: 6c0d187b-c08f-4e96-a602-1dd87e972df6
    trigger:
      - platform: state
        entity_id: input_boolean.training_mode
        to: "off"
    action:
      - alias: "Re-enable adaptive lighting"
        service: switch.turn_on
        target:
          entity_id:
            - switch.adaptive_lighting_adapt_brightness_main_adaptive_lighting
            - switch.adaptive_lighting_adapt_brightness_office
      - delay:
          milliseconds: 250
      - service: scene.turn_on
        target:
          entity_id: scene.state_before_training
      - alias: "Clear notification"
        service: notify.corban
        data:
          message: "clear_notification"
          data:
            tag: "training_mode_left_on"

  - alias: Training Mode Left On Notification
    id: 1a38b478-549d-4d84-9a00-8c1ce37bddea
    trigger:
      - platform: state
        entity_id: input_boolean.training_mode
        to: "on"
        for:
          minutes: 15
    action:
      - alias: "Notify Corban"
        service: notify.corban
        data:
          title: "Training Mode Reminder"
          message: "Training mode is still on. Turn off?"
          data:
            tag: "training_mode_left_on"
            actions:
              - action: "TRAINING_TURN_OFF"
                title: "Turn off."
                activationMode: "background"
                authenticationRequired: false # Don't require unlocking the device
                destructive: false
                behavior: "default"

  - alias: Training Mode Left On - Notification Action
    id: 40261cea-1c15-4dfc-b795-ce11a932e394
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: "TRAINING_TURN_OFF"
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.training_mode

  - alias: "Hall Light Config - 2x - Training Mode Toggle"
    id: 1586cf0a-cf0f-4b81-bc77-05090c64f186
    trigger:
      - platform: device
        domain: mqtt
        device_id: f6a3f0606ae31f561f4c700f5917deed
        type: action
        subtype: config_double
        discovery_id: 0xb43a31fffe34e475 action_config_double
    action:
      - service: input_boolean.toggle
        target:
          entity_id: input_boolean.training_mode
