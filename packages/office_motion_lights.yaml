# Using a mmWave sensor with ESPHome to determine the office occupancy and control lighting.
light:
  - platform: group
    name: Main Office Lights
    unique_id: 164722fa-2fce-4e46-9054-af4f2a08b0dd
    entities:
      - light.office_leds
      - light.wled_master # Used when there are multiple segments
      - light.corban_s_office_lamp
      - light.office_corner_lamp

automation:
  - alias: Office Motion Lights
    id: 3c42906d-db94-454e-8dc9-bc980e94223f
    mode: restart
    trigger:
      - platform: state
        entity_id: binary_sensor.office_mini_motion_presence
        to: "on"
      - platform: state
        entity_id: binary_sensor.office_mini_motion_presence
        to: "off"
        for:
          minutes: 3
    condition:
      - alias: "Home Mode"
        condition: state
        entity_id: input_select.home_mode
        state: "Home"
      - alias: "Office is not marked as excluded"
        condition: state
        entity_id: input_boolean.room_exclude_office
        state: "off"
    action:
      - choose:
          - conditions: "{{ trigger.to_state.state == 'on' }}"
            sequence:
              - service: light.turn_on
                target:
                  entity_id: light.main_office_lights
          - conditions: "{{ trigger.to_state.state == 'off' }}"
            sequence:
              - if:
                  - alias: "Training Mode On"
                    condition: state
                    entity_id: input_boolean.training_mode
                    state: "on"
                then:
                  - alias: "Wait until Training Mode is off"
                    wait_for_trigger:
                      - platform: state
                        entity_id: input_boolean.training_mode
                        to: "off"
              - service: light.turn_off
                target:
                  entity_id: light.main_office_lights
