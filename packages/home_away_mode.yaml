# Simplify the tracking of whether or not someone is home. Device trackers have been complicated and frustrating, so let's start over with a switch.
# If no one is home and a door is opened, assume someone got home.
# Pressing the button by the door (when leaving the house) indicates that no one is home.

input_boolean:
  home_occupied:
    name: Home Occupied
    icon: mdi:home

binary_sensor:
  - platform: template
    sensors:
      home_occupied:
        friendly_name: "Home Occupied"
        device_class: occupancy
        value_template: >-
          {{ is_state('input_boolean.home_occupied', 'on') }}

automation:
  - alias: Mark home occupied when the door opens
    trigger:
      - platform: state
        entity_id: binary_sensor.front_door
        to: "on"
    condition:
      # Only count this as someone coming home if the home has been unoccupied for at least 1 minute.
      # This allows a grace period to leave, much like alarm systems.
      - condition: state
        entity_id: input_boolean.home_occupied
        state: "off"
        for:
          minutes: 1
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.home_occupied

  - alias: Mark home occupied when someone is home for a few minutes
    # This functions as a backup in case the door sensor didn't trip somehow.
    trigger:
      - platform: state
        entity_id: group.adults
        to: "home"
        for:
          minutes: 5
    # TODO: Guest mode condition
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.home_occupied

  - alias: Automatically mark the home as unoccupied if no one is home
    trigger:
      - platform: state
        entity_id: group.adults
        to: "not_home"
        for:
          minutes: 60
    # TODO: Guest mode condition
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.home_occupied

  ## Switch Actions ##

  - alias: Living Room Switch - Press On sets the home as occupied
    trigger:
      - platform: state
        entity_id: sensor.0x000d6ffffea6b202_click
        to: "on" # Up
    action:
      - service: input_boolean.turn_on
        data:
          entity_id: input_boolean.home_occupied

  - alias: Living Room Switch - Press Off sets the home as unoccupied
    trigger:
      - platform: state
        entity_id: sensor.0x000d6ffffea6b202_click
        to: "off" # Down
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.home_occupied

  - alias: Living Room Switch - Hold On turns on movie mode
    trigger:
      - platform: state
        entity_id: sensor.0x000d6ffffea6b202_click
        to: "brightness_up" # Hold up
    action:
      - service: script.turn_on
        entity_id: script.living_room_movie_mode

  - alias: Living Room Switch - Hold Off for unoccupied and vacuum run
    trigger:
      - platform: state
        entity_id: sensor.0x000d6ffffea6b202_click
        to: "brightness_down" # Hold down
    action:
      - service: input_boolean.turn_off
        data:
          entity_id: input_boolean.home_occupied
      - service: vacuum.start
        data:
          entity_id: vacuum.xiaomi_vacuum_cleaner

  ## Outputs/actions from Home/Away Changes ##

  # When someone gets home, play a welcome message on the Google Home Mini that is near the front door.
  # This welcome message will only play if it wouldn't be a disruption to the current occupants of the apartment.
  - alias: Welcome Home announcement when someone gets home
    trigger:
      - platform: state
        entity_id: input_boolean.home_occupied
        to: "on"
    condition:
      - condition: time # From 7AM - 9PM
        after: "07:00:00"
        before: "21:00:00"
      # Check that nothing is playing in the living room (as to not interrupt someone's media).
      # Note: With Roku, this just means that some channel is open, not necessarily that media is actually playing.
      # This weird app_id is the "Davinci Channel" which seems to occasionally be active when the TV is turned off.
      - condition: template
        value_template: >-
          {{ states("media_player.living_room_tv") != "playing" or state_attr("media_player.living_room_tv", "app_id") == "250045" }}
      - condition: template
        value_template: >-
          {{ states("media_player.kitchen_speaker") != "playing" }}
    action:
      - service: script.turn_on
        entity_id: script.welcome_home_announcement

  - alias: Home Occupied - Lights, Wall Display on
    trigger:
      - platform: state
        entity_id: input_boolean.home_occupied
        to: "on"
    action:
      - service: light.turn_on
        data:
          entity_id: light.wall_display_screen
      - service: light.turn_on
        data:
          entity_id: light.tv_lamp
          brightness: 127 # 50%

  # TODO: Set up for new thermostat.
  # - alias: Home Occupied - Set Nest home
  #   trigger:
  #     - platform: state
  #       entity_id: input_boolean.home_occupied
  #       to: "on"
  #   action:
  #     - service: nest.set_away_mode
  #       data:
  #         away_mode: home

  - alias: Home Unoccupied - Turn everything off
    trigger:
      - platform: state
        entity_id: input_boolean.home_occupied
        to: "off"
    action:
      - service: script.turn_on
        entity_id: script.everything_off
      - service: script.turn_on
        entity_id: script.flash_wall_display_light

  # TODO: Set up for new thermostat.
  # - alias: Home Unoccupied - Set Nest away
  #   trigger:
  #     - platform: state
  #       entity_id: input_boolean.home_occupied
  #       to: "off"
  #   action:
  #     - service: nest.set_away_mode
  #       data:
  #         away_mode: away

script:
  welcome_home_announcement:
    sequence:
      # - delay:
      #     seconds: 2
      - service: media_player.volume_set
        data:
          entity_id: media_player.kitchen_speaker
          volume_level: 0.5
      - service: tts.google_cloud_say
        entity_id: media_player.kitchen_speaker
        data_template:
          message: Welcome home!

  flash_wall_display_light:
    sequence:
      - service: light.turn_on
        data:
          entity_id: light.wall_display_light
          rgb_color: [255, 0, 0] # Red
      - delay:
          milliseconds: 250
      - service: light.turn_off
        data:
          entity_id: light.wall_display_light
      - delay:
          milliseconds: 250
      - service: light.turn_on
        data:
          entity_id: light.wall_display_light
          rgb_color: [255, 0, 0] # Red
      - delay:
          milliseconds: 250
      - service: light.turn_off
        data:
          entity_id: light.wall_display_light
