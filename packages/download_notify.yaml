# Package for download notifications

sensor:
  - platform: mqtt
    name: Most Recent Download
    state_topic: "home/obama/downloadcomplete"
  - platform: mqtt
    name: Number of Downloads Waiting
    state_topic: "emulated/numberdownloadswaiting"


binary_sensor:
  - platform: threshold
    name: Download Waiting
    threshold: 0
    type: upper
    entity_id: sensor.number_of_downloads_waiting


automation:
  - alias: "New Obama Download"
    hide_entity: true
    trigger:
      - platform: state
        entity_id: sensor.most_recent_download
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{ trigger.to_state.state != 'none' }}"
        - condition: template
          value_template: "{{ trigger.to_state.state != trigger.from_state.state }}" # Just in case
    action: 
      - service: mqtt.publish
        data:
          topic: "emulated/numberdownloadswaiting"
          retain: true
        data_template:
          payload: "{{ states('sensor.number_of_downloads_waiting') | int + 1 }}"

  - alias: "Reset Download Count"
    hide_entity: true
    trigger:
      - platform: state
        entity_id: sensor.most_recent_download
        to: "none"
    action: 
      - service: mqtt.publish
        data:
          topic: "emulated/numberdownloadswaiting"
          retain: true
          payload: 0


script:
  reset_download_count:
    sequence:
    - service: mqtt.publish
      data:
        topic: "home/obama/downloadcomplete"
        retain: true
        payload: "none"

 
group:
  obama_download_monitor:
    name: Download Monitor
    entities:
      - binary_sensor.download_waiting
      - sensor.number_of_downloads_waiting
      - sensor.most_recent_download
      - script.reset_download_count
