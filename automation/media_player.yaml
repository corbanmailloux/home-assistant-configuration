# Media player automations

- alias: "Media player paused/stopped"
  hide_entity: true
  trigger:
    - platform: state
      entity_id: media_player.kodi_obama
      from: "playing"
    - platform: state
      entity_id: media_player.corban_and_maggie
      from: "playing"
  condition:
    - condition: state
      entity_id: sun.sun
      state: "below_horizon"
    - condition: state
      entity_id: input_select.backlight_mode
      state: "Media control"
  action:
    - service: script.turn_on
      entity_id: script.media_undim_master

- alias: "Media player playing"
  hide_entity: true
  trigger:
    - platform: state
      entity_id: media_player.kodi_obama
      to: "playing"
    - platform: state
      entity_id: media_player.corban_and_maggie
      to: "playing"
  condition:
    - condition: state
      entity_id: sun.sun
      state: "below_horizon"
    - condition: state
      entity_id: input_select.backlight_mode
      state: "Media control"
  action:
    - service: script.turn_on
      entity_id: script.media_dim_master

- alias: "Chromecast starts Spotify"
  hide_entity: true
  trigger:
    - platform: template
      value_template: >
        {% if states.media_player.corban_and_maggie is not none 
          and states.media_player.corban_and_maggie.attributes.app_name == "Spotify" %}
          true
        {% endif %}
  condition:
    - condition: state
      entity_id: input_select.backlight_mode
      state: "Media control"
  action:
    - service: scene.turn_on
      entity_id: scene.tv_spotify

- alias: "Reset color when Chromecast stops"
  # hide_entity: true
  initial_state: false
  trigger:
    - platform: state
      entity_id: media_player.corban_and_maggie
      from: "playing"
      to: "off"
    - platform: state
      entity_id: media_player.corban_and_maggie
      from: "paused"
      to: "off"
  condition:
    - condition: state
      entity_id: input_select.backlight_mode
      state: "Media control"
  action:
    - service: scene.turn_on
      entity_id: scene.tv_kodi_background
