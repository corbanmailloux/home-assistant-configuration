esphome:
  name: unicycle-monitor

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
  level: DEBUG
  logs:
    esp32_ble_tracker: INFO

# Enable Home Assistant API
api:

ota:
  password: !secret ota_password

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

# esp32_ble_tracker:

# ble_client:
#   - mac_address: 4C:24:98:61:C6:15
#     id: ks16x


# text_sensor:
#   - platform: ble_client
#     ble_client_id: ks16x
#     id: ks16x_char
#     service_uuid: 0000ffe0-0000-1000-8000-00805f9b34fb # 'FFE0'
#     characteristic_uuid: 0000ffe1-0000-1000-8000-00805f9b34fb # 'FFE1'
#     notify: true
#     on_notify:
#       then:
#         lambda: |-
#           ESP_LOGE("myhomeiot_ble_client", "Notify: payload size: %d", x.size());
#           // ESP_LOGE("myhomeiot_ble_client", "Notify: payload: %s", x.c_str());
#     on_value:
#       then:
#         lambda: |-
#           ESP_LOGE("myhomeiot_ble_client", "Value: payload size: %d", x.size());
#           // ESP_LOGE("myhomeiot_ble_client", "Notify: payload: %s", x.c_str());

# sensor:
#   - platform: ble_client
#     ble_client_id: ks16x
#     id: ks16x_char
#     service_uuid: 'ffe0'
#     characteristic_uuid: 'ffe1'
#     notify: true
#     on_notify:
#       then:
#         lambda: |-
#           ESP_LOGE("myhomeiot_ble_client", "Notify: payload size (%d)", x.size());
#           ESP_LOGE("myhomeiot_ble_client", "Notify: payload bytes: 0: %d - 1: %d - 2: %d - 16: %d", x[0], x[1], x[2], x[16]);
#           int voltage = (x[2] & 0xFF) + (x[3] << 8);
#           ESP_LOGE("myhomeiot_ble_client", "Notify: Voltage?: %d", voltage);



###### Attempting to use a custom component for this: 
# https://github.com/myhomeiot/esphome-components#ble-client
######

# external_components:
#   - source: github://myhomeiot/esphome-components

# myhomeiot_ble_host:

# myhomeiot_ble_client:
#   - mac_address: 4C:24:98:61:C6:15
#     id: ks16x
#     service_uuid: 0000ffe0-0000-1000-8000-00805f9b34fb # 'FFE0'
#     characteristic_uuid: 0000ffe1-0000-1000-8000-00805f9b34fb # 'FFE1'
#     update_interval: 30s
#     on_value:
#       then:
#         lambda: |-
#           ESP_LOGE("myhomeiot_ble_client", "payload size: %d", x.size());
#           ESP_LOGE("myhomeiot_ble_client", "payload bytes: 0: %d, 1: %d, 2: %d, 3: %d, 16: %d, 100: %d", x[0], x[1], x[2], x[3], x[16], x[100]);
#           int voltage = (x[2] & 0xFF) + (x[3] << 8);
#           ESP_LOGE("myhomeiot_ble_client", "Voltage?: %d", voltage);


####### References for my device.
# Found device 4C:24:98:61:C6:15 RSSI=-59
# [D][esp32_ble_tracker:744]:   Address Type: PUBLIC
# [D][esp32_ble_tracker:746]:   Name: 'KS-16X-4034'
# [D][esp32_ble_tracker:748]:   TX Power: 2

# [17:11:00][I][ble_client:085]: Attempting BLE connection to 4c:24:98:61:c6:15
# [17:11:02][I][ble_client:161]: Service UUID: 0x1800
# [17:11:02][I][ble_client:162]:   start_handle: 0x1  end_handle: 0xb
# [17:11:02][I][ble_client:347]:  characteristic 0x2A00, handle 0x3, properties 0x2
# [17:11:02][I][ble_client:347]:  characteristic 0x2A01, handle 0x5, properties 0x2
# [17:11:02][I][ble_client:347]:  characteristic 0x2A02, handle 0x7, properties 0xa
# [17:11:02][I][ble_client:347]:  characteristic 0x2A03, handle 0x9, properties 0xa
# [17:11:02][I][ble_client:347]:  characteristic 0x2A04, handle 0xb, properties 0x2
# [17:11:02][I][ble_client:161]: Service UUID: 0x1801
# [17:11:02][I][ble_client:162]:   start_handle: 0xc  end_handle: 0xf
# [17:11:02][I][ble_client:347]:  characteristic 0x2A05, handle 0xe, properties 0x20
# [17:11:02][I][ble_client:161]: Service UUID: 0x180A
# [17:11:02][I][ble_client:162]:   start_handle: 0x10  end_handle: 0x22
# [17:11:02][I][ble_client:347]:  characteristic 0x2A23, handle 0x12, properties 0x2
# [17:11:02][I][ble_client:347]:  characteristic 0x2A24, handle 0x14, properties 0x2
# [17:11:02][I][ble_client:347]:  characteristic 0x2A25, handle 0x16, properties 0x2
# [17:11:02][I][ble_client:347]:  characteristic 0x2A29, handle 0x1e, properties 0x2
# [17:11:02][I][ble_client:347]:  characteristic 0x2A2A, handle 0x20, properties 0x2
# [17:11:02][I][ble_client:347]:  characteristic 0x2A50, handle 0x22, properties 0x2
# [17:11:02][I][ble_client:161]: Service UUID: 0xFFF0
# [17:11:02][I][ble_client:162]:   start_handle: 0x23  end_handle: 0x33
# [17:11:02][I][ble_client:347]:  characteristic 0xFFF1, handle 0x25, properties 0xa
# [17:11:02][I][ble_client:347]:  characteristic 0xFFF2, handle 0x28, properties 0x2
# [17:11:02][I][ble_client:347]:  characteristic 0xFFF3, handle 0x2b, properties 0x8
# [17:11:02][I][ble_client:347]:  characteristic 0xFFF4, handle 0x2e, properties 0x10
# [17:11:02][I][ble_client:347]:  characteristic 0xFFF5, handle 0x32, properties 0x16
# [17:11:02][I][ble_client:161]: Service UUID: 0xFFE0
# [17:11:02][I][ble_client:162]:   start_handle: 0x34  end_handle: 0xffff